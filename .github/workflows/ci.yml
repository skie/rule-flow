name: CI

on:
  push:
    branches:
      - main
      - develop
      - '*.x'
  pull_request:
    branches:
      - main
      - develop
      - '*.x'

jobs:
  cs-stan:
    name: "Code Standards & Static Analysis"
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, intl, pdo_sqlite
        coverage: none

    - name: Composer install
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Run PHP CodeSniffer
      run: composer cs-check

    - name: Run PHPStan
      run: composer stan

  testsuite:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.3', '8.4']
        prefer-lowest: ['']
        include:
          - php-version: '8.3'
            prefer-lowest: 'prefer-lowest'

    name: "PHPUnit / PHP ${{ matrix.php-version }} ${{ matrix.prefer-lowest }}"

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, intl, pdo_sqlite
        coverage: pcov

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache composer dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Composer install
      run: |
        if [[ ${{ matrix.prefer-lowest }} == 'prefer-lowest' ]]; then
          composer update --prefer-lowest --prefer-stable --no-progress --prefer-dist --optimize-autoloader
        else
          composer install --no-progress --prefer-dist --optimize-autoloader
        fi

    - name: Run PHPUnit
      run: |
        if [[ ${{ matrix.php-version }} == '8.3' && ${{ matrix.prefer-lowest }} == '' ]]; then
          composer test-coverage-text
        else
          composer test
        fi

    - name: Submit code coverage
      if: matrix.php-version == '8.3' && matrix.prefer-lowest == ''
      uses: codecov/codecov-action@v3

  js-tests:
    name: "JavaScript Tests"
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        cd webroot/js
        npm init -y
        npm install --save-dev jest jsdom

    - name: Create Jest config
      run: |
        cd webroot/js
        cat > jest.config.js << 'EOF'
        module.exports = {
          testEnvironment: 'jsdom',
          testMatch: ['**/*.test.js'],
          collectCoverageFrom: [
            '**/*.js',
            '!node_modules/**',
            '!jest.config.js',
            '!**/*.test.js'
          ]
        };
        EOF

    - name: Create basic test
      run: |
        cd webroot/js
        mkdir -p __tests__
        cat > __tests__/form-watcher.test.js << 'EOF'
        describe('FormWatcher', () => {
          test('should be defined', () => {
            expect(typeof FormWatcher).toBeDefined();
          });
        });
        EOF

    - name: Run tests
      run: |
        cd webroot/js
        npm test
